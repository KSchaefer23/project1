//////// Project 1
//////// Kevin Schaefer  (CST 112 - 10/14/15)

String author=  "Kevin Schaefer";
String title=  "PROJECT ONE";
String help=  " Click to relocate hero \n 'q' to Quit; 'r' to Reset. ";

int count= 0;

//// GLOBALS:  coordinates, speed, etc.
float horizon;
float heroX, heroY;       // Position.
float heroDX, heroDY;     // Speed.
float monsterX, monsterY;
float goldX, goldY;
float sunX, sunY;

//// SETUP:  window size, initialization (start in middle of screen).
void setup() {
  size( 640,480);
  horizon=  height/4;
  reset();
}

void reset() {
  heroX=  width/2;
  heroY=  height/2;
  heroDX=  3;
  heroDY=  2;
  sunX= width*3/4;
  sunY= height/8;
  goldX= random(0,width);
  goldY= random(horizon,height);
  monsterX= heroX;
  monsterY= heroY;
}

//// NEXT FRAME:  scene, action, show.
void draw() {
  count= count +1;  // same as count++; or count += 1;
  scene();
  gold();
  hero();
  monster();
  messages();
}

//// SCENE:  sky, sun, tree, house, etc.
void scene() {  
  background(0,200,255);                    // sky
  fill(255,255,0);
  
  sunX= (sunX + .75) % (width+100);
  sunY= (sunY + .1) % (horizon + 40);
  ellipse(sunX,sunY, 60,60 );               // sun
  fill( 100,200,100 );
  rect( 0,horizon, width,height*3/4 );      // grass.
  
  fill(6,118,7);
  triangle( 110,horizon-10, 150,horizon-45, 190,horizon-10  );  // bottom
  triangle( 120,horizon-30, 150,horizon-60, 180,horizon-30  );  // mid
  triangle( 130,horizon-50, 150,horizon-70, 170,horizon-50  );  // top
  fill(204,102,0);
  rect(140, horizon-10, 20,10 );
  
  rect(30,horizon-60, 60,60);                                          // house
  fill(245,245,245);
  rect(40,horizon-50, 15,15);                                          // window
  rect(65,horizon-50, 15,15);                                          // window
  fill(255,0,0);
  rect(50,horizon-30, 20,30);                                          // door
  fill(255,255,0);
  ellipse(65, horizon-15, 5,5 );                                       // knob
  fill(118,62,6);
  triangle( 30,horizon-60, 60,horizon-90, 90,horizon-60);              // roof
}

void messages() {
  text( title, width/3, 20 );
  text( help, width*2/3, 30 );
  text( author, 10,height-20 );
}

//// ACTION:  move (x,y) coordinates of hero & monster; show them.
void gold() {
  fill(255,255,0);
  ellipse(goldX,goldY, 20,20);
}

void hero() {
  fill(0,200,200);
  rect(heroX-20,heroY, 70,10);                   // body
  rect( heroX,heroY, 30,50 );        
  ellipse(heroX+15, heroY-10, 20, 20);
  fill(255,255,255);
  ellipse(heroX+10, heroY-12, 6, 6);             // eyes
  ellipse(heroX+20, heroY-12, 6, 6);
  fill(0,0,0);
  ellipse(heroX+10, heroY-12, 2, 2);
  ellipse(heroX+20, heroY-12, 2, 2);
  fill(255,0,0);
  arc(heroX+15,heroY-7, 10,10, 0, PI, CHORD);    // smile
  text( "Blue", heroX+3,heroY+20 );
  
  heroX = heroX + heroDX;                            // makes hero move away
  if (heroX>width-20) { heroDX= -heroDX; }
  if (heroX<1) { heroDX= -heroDX; }
  heroY = heroY + heroDY;
  if (heroY<horizon-20 || heroY>height-20) {
    heroDY= -heroDY;
  }
}

void monster() {
  monsterX=  monsterX - (monsterX-heroX)/30;
  monsterY=  monsterY - (monsterY-heroY)/40;
  text( monsterX, 10, 10 );
  text( monsterY, 10, 20 );
  fill( 124,83,6 );
  
  // ANIMATION //
  strokeWeight(3);
  if ( count/30 % 2 == 0 ) {              // Straight Legs
    line(monsterX-18,monsterY, monsterX-18,monsterY+15);  // Left 1
    line(monsterX-12,monsterY, monsterX-12,monsterY+15);  // Left 2
    line(monsterX+18,monsterY, monsterX+18,monsterY+15);  // Right 1
    line(monsterX+12,monsterY, monsterX+12,monsterY+15);  // Right 2
  } else {                                // Moved Legs
    line(monsterX-18,monsterY, monsterX-10,monsterY+15);  // L
    line(monsterX-18,monsterY, monsterX-22,monsterY+15);  // L
    line(monsterX+18,monsterY, monsterX+8,monsterY+15);   // R
    line(monsterX+18,monsterY, monsterX+22,monsterY+15);   // R
  }
  strokeWeight(1);
  
  ellipse(monsterX,monsterY, 40,20 );           // body
  
  if(heroX<monsterX) {                          // FACE LEFT 
    ellipse(monsterX-20,monsterY-15, 20,20);    // head
    fill(0,0,0);
    ellipse(monsterX-24,monsterY-18, 2,2);      // eye
    ellipse(monsterX-30,monsterY-15, 3,3);      // nose
    fill(80,50,0);
    ellipse(monsterX-14,monsterY-13, 11,20);    // ear
    line(monsterX+20,monsterY, monsterX+30,monsterY+10);// tail
  }
  if(heroX>monsterX) { 
    ellipse(monsterX+20,monsterY-15, 20,20);    // head
    fill(0,0,0);
    ellipse(monsterX+24,monsterY-18, 2,2);      // eye
    ellipse(monsterX+30,monsterY-15, 3,3);      // nose
    fill(80,50,0);
    ellipse(monsterX+14,monsterY-13, 11,20);    // ear
    line(monsterX-20,monsterY, monsterX-30,monsterY+10);
  }
}

// HANDLERS:  mouse clicks, keys
void mousePressed() {
  heroX=  mouseX;                             // Set (x,y) to mouse
  heroY=  mouseY;
  //
  heroDX=  random( -6, +6 );                  // random speed.
  heroDY=  random( -4, +4 );
}

void keyPressed() {
  if (key == 'q') 
    exit();                           // press 'q' key to QUIT.
  if (key == 'r') 
    reset();
}
